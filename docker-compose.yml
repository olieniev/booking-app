version: "3.8"

services:
  postgresdb:
    platform: linux/arm64
    image: postgres
    restart: unless-stopped
    env_file: ./.env
    environment:
      POSTGRES_USER: ${POSTGRESDB_USER}
      POSTGRES_PASSWORD: ${POSTGRESDB_PASSWORD}
      POSTGRES_DB: ${POSTGRESDB_DATABASE}
    ports:
      - ${POSTGRES_LOCAL_PORT}:${POSTGRES_DOCKER_PORT}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRESDB_USER} -d ${POSTGRESDB_DATABASE}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  app:
    depends_on:
      postgresdb:
        condition: service_healthy
    restart: on-failure
    image: bookingapp-service
    build: .
    env_file: ./.env
    ports:
      - ${SPRING_LOCAL_PORT}:${SPRING_DOCKER_PORT}
      - ${DEBUG_PORT}:${DEBUG_PORT}
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url"  : "jdbc:postgresql://postgresdb:${POSTGRES_DOCKER_PORT}/${POSTGRESDB_DATABASE}",
        "spring.datasource.username" : "${POSTGRESDB_USER}",
        "spring.datasource.password" : "${POSTGRESDB_PASSWORD}",
        "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.PostgreSQLDialect",
    "spring.jpa.hibernate.ddl-auto": "update"
      }'
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:$DEBUG_PORT"
    command: ["./wait-for-it.sh", "postgresdb:${POSTGRES_DOCKER_PORT}", "--", "java", "-jar", "/app.jar"]
volumes:
  postgres_data: